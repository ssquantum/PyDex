# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'multirun_queue.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_QueueWindow(object):

    def __init__(self, mr_queue):
        self.mr_queue = mr_queue

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("Multirun Queue")
        MainWindow.resize(456, 269)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.up_btn = QtWidgets.QPushButton(self.centralwidget)
        self.up_btn.setObjectName("up_btn")
        self.down_btn = QtWidgets.QPushButton(self.centralwidget)
        self.down_btn.setObjectName("down_btn")
        self.remall_btn = QtWidgets.QPushButton(self.centralwidget)
        self.remall_btn.setObjectName("remall_btn")
        self.remove_btn = QtWidgets.QPushButton(self.centralwidget)
        self.remove_btn.setObjectName("remove_btn")
        # self.edit_btn = QtWidgets.QPushButton(self.centralwidget)
        # self.edit_btn.setObjectName("edit_btn")
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setObjectName("listWidget")

        # Put Buttons in boxes for dynamic layout
        hbox = QtWidgets.QHBoxLayout()
        hbox.addWidget(self.up_btn)
        hbox.addWidget(self.down_btn, 1)
        hbox.addWidget(self.remove_btn, 2)
        hbox.addWidget(self.remall_btn, 3)
        # hbox.addWidget(self.edit_btn, 4)

        vbox = QtWidgets.QVBoxLayout()
        vbox.addLayout(hbox)
        vbox.addStretch()
        vbox.addWidget(self.listWidget, 1)

        self.centralwidget.setLayout(vbox)

        # Fill listwidget with items from mr_queue
        for params, _, _, _ in self.mr_queue:
            item = QtWidgets.QListWidgetItem()
            self.listWidget.addItem(item)

        # Add menubar and status bar
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 456, 24))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.remall_btn.clicked.connect(lambda: self.del_all())
        self.up_btn.clicked.connect(lambda: self.move_up())
        self.down_btn.clicked.connect(lambda: self.move_down())
        self.remove_btn.clicked.connect(lambda: self.delete_run())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def updateList(self):
        _translate = QtCore.QCoreApplication.translate
        for i, (params, _, _, _) in enumerate(self.mr_queue):
            item = self.listWidget.item(i)
            item.setText(_translate("Multirun Queue", params['measure_prefix'] + '\t' + params['Variable label'] + '\n'))


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("Multirun Queue", "Multirun Queue"))
        self.remall_btn.setStatusTip(_translate("Multirun Queue", "Delete All multiruns"))
        self.remall_btn.setText(_translate("Multirun Queue", "Remove All"))
        self.remove_btn.setStatusTip(_translate("Multirun Queue", "Remove a multirun"))
        self.remove_btn.setText(_translate("Multirun Queue", "Remove"))
        # self.edit_btn.setStatusTip(_translate("Multirun Queue", "Change a mutlirun"))
        # self.edit_btn.setText(_translate("Multirun Queue", "Edit"))
        self.up_btn.setStatusTip(_translate("Multirun Queue", "Move multirun up the queue"))
        self.up_btn.setText(_translate("Multirun Queue", "Move Up"))
        self.down_btn.setStatusTip(_translate("Multirun Queue", "Move multirun down the queue"))
        self.down_btn.setText(_translate("Multirun Queue", "Move Down"))
        __sortingEnabled = self.listWidget.isSortingEnabled()
        self.listWidget.setSortingEnabled(False)

        self.updateList()

        self.listWidget.setSortingEnabled(__sortingEnabled)

    def move_up(self):
        currentRow = self.listWidget.currentRow()
        if currentRow != 0:
            self.mr_queue[currentRow], self.mr_queue[currentRow - 1] = self.mr_queue[currentRow - 1], self.mr_queue[currentRow]
            self.updateList()
            self.listWidget.setCurrentRow(currentRow-1)

    def move_down(self):
        currentRow = self.listWidget.currentRow()
        if currentRow != self.listWidget.count()-1:
            self.mr_queue[currentRow], self.mr_queue[currentRow + 1] = self.mr_queue[currentRow + 1], self.mr_queue[currentRow]
            self.updateList()
            self.listWidget.setCurrentRow(currentRow+1)

    def delete_run(self):
        currentRow = self.listWidget.currentRow()
        self.listWidget.takeItem(currentRow)
        del self.mr_queue[currentRow]
        self.updateList()
        if currentRow == 0:
            pass
        else:
            self.listWidget.setCurrentRow(currentRow-1)

    def del_all(self):
        self.mr_queue.clear()
        self.listWidget.clear()
        self.updateList()



# TODO
# Remove all does not seem to be working

# To run this as a script file:
# if __name__ == "__main__":
#     import sys
#     test = []
#     app = QtWidgets.QApplication(sys.argv)
#     MainWindow = QtWidgets.QMainWindow()
#     ui = Ui_QueueWindow(test)
#     ui.setupUi(MainWindow)
#     MainWindow.show()
#     sys.exit(app.exec_())